special containers:

confings = {
			"11581578175" : {
				"algorithm" : "hybrid",
				"threshold" : 0.8,
				"time" : 100000000
				"trainFileName" : "train.csv",
				"testFileName" : "test.csv"
			},

			"16839839589" : {
				"algorithm" : "regression",
				"threshold" : 0.95,
				"time" : 20000000000
				"trainFileName" : "train2.csv",
				"testFileName" : "test2.csv"
			},

			...
		}

files = {
			"11581578175" : {
				"train" : TrainCSVjson,
				"test" : TestCSVjson,
				"anomalies" : <anomalies_json>
			},

			"16839839589" : {
				"train" : TrainCSVjson2,
				"test" : TestCSVjson2,
				"anomalies" : <anomalies_json>
			},

			...
		}

=================================================

request:
	path: '/'
	parameters: <none>
	body: <none>

response:
	index.html webpage

-------------------------------------------------

request:
	path: '/detect'
	parameters: algorithm 	(regression, hybrid) 
				threshold 	(a value between 0 and 1) 
				time 		(the time of the request in ms)
				trainFileName (name of train CSV file) 
				testFileName  (name of test CSV file)
	body: { 
			"train" : TrainCSV, // JSON format!!!
			"test" : TestCSV, // JSON format!!!
		}

response:
	json anomalies object - 
	{
		"id" : 11581578175,
		"anomalies" : [
			{
				"col_1" : "A",
				"col_2" : "B",
				"data" : [1, 2, 4, 5, 19, 20]
			},
			{
			{
				"col_1" : "C",
				"col_2" : "D",
				"data" : [3, 70, 71, 72]	
			}.
			//...
		]
	}

additional actions made:
	- saving to configs json
	- saving to files json
		

-------------------------------------------------

request:
	path: '/reportsConfigHistory'
	parameters: <none>
	body <none>

response:
	configs json.

-------------------------------------------------

request:
	path: '/reportData'
	parameters: id   (ID number of an entry; available using /reportsConfigHistory first.)
				type (train, test, result)
	body: <none>

response:
	type == train:
		trainCSV in Json format - { 'A' : [...], 'B' : [...] , //...}
	type == test:
		testCSV in Json format - { 'A' : [...], 'B' : [...] , //...}
	type == result:
		anomalies JSON. same from /detect.

-------------------------------------------------